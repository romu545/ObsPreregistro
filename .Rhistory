library(ObsPreregistro)
devtools::check()
devtools::check()
library(ObsPreregistro)
Semana <- "Semana_42"
# Nombre de la carpeta en donde se guardarán los archivos resultantes de la revisión.
Carpeta <- paste0("Revision_", Semana)
# Crear la carpeta que contendrá los archivos resultantes de la revisión. Adicionalmente,
# se creará una subcarpeta para guardar los archivos shape para evaluar las coordenadas
# por fuera de la ruta.
fs::dir_create(file.path(Carpeta, "Shape"))
# Intervalos de registros para revisar.
Registros_Evaluar <- c(20012L, 20040L)
## Importar todos los datos del informe de pre-registro.
Datos_Preregistro <- D_G_Preregistro("http://sepec.aunap.gov.co/Acuicultura/InformePreregistroCaracterizacionAcuiculturaCSV2.csv")
## Filtrar los pre-registros de la vigencia actual.
Datos_Preregistro_Vigencia_Actual <- Datos_Preregistro |> dplyr::filter(fechadigitacion > "2023-10-01")
## Filtrar los pre-registros para evaluar.
Datos_Evaluar <- Datos_Preregistro_Vigencia_Actual |>
dplyr::filter(dplyr::between(registro, Registros_Evaluar[1], Registros_Evaluar[2]))
## Filtrar los pre-registros anteriormente evaluados.
Preregistros_Antiguos <- Datos_Preregistro |>
dplyr::filter(colector != "pnud", registro < Registros_Evaluar[1]) |>
dplyr::select(c("registro", "latitud", "longitud"))
Datos_Evaluar_SF <- Datos_Evaluar_SF(Datos_Evaluar)
Dptos_Evaluar <- unique(Datos_Preregistro_Vigencia_Actual[['departamento']])
Dptos_Evaluar
Mpios_Evaluar <- unique(Datos_Preregistro_Vigencia_Actual[['municipio']])
Mpios_Evaluar
Lista_Nombres_Validos <- utils::read.csv("../Nom_UPA.csv")
Lista_Nombres_Validos <- utils::read.csv("C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Nom_UPA.csv")
Lista_Nombres_Auxiliar <- c("la upa no existe", "upa inexistente", "no informa", "no aplica")
Datos_GC_SF <- D_G_Caracterizacion_SF(
"http://sepec.aunap.gov.co/Acuicultura/CaracterizacionGranjaAcuiculturaCSV2.csv",
Dptos_Evaluar,
Mpios_Evaluar)
Datos_GC_SF
Obs_Nombre_UPA <- Obs_Nombre_UPA(Datos_Evaluar, Lista_Nombres_Validos, Lista_Nombres_Auxiliar)
Obs_Nombre_UPA_Inexistente <- Obs_Nombre_UPA_Inexistente(Datos_Evaluar, Lista_Nombres_Auxiliar)
Obs_Nombre_Predio <- Obs_Nombre_Predio(Datos_Evaluar, Lista_Nombres_Auxiliar)
Obs_Codigo_Misma_UPA <- Obs_Codigo_Misma_UPA(Datos_Evaluar, Datos_Preregistro)
Obs_Posibles_UPA_Repetidas <- Obs_Posibles_UPA_Repetidas(Datos_Evaluar, Lista_Nombres_Auxiliar)
Obs_UPA_Repetidas <- Obs_UPA_Repetidas(Datos_Evaluar, Lista_Nombres_Auxiliar)
Obs_Coordenadas_Repetidas <- Obs_Coordenadas_Repetidas(Datos_Evaluar)
Obs_Coordenadas_En_Pregistros_Antiguos <- Obs_Coordenadas_En_Pregistros_Antiguos(Datos_Evaluar, Preregistros_Antiguos)
Datos_Elevacion <- Datos_Elevacion(Datos_Evaluar_SF)
readr::read_delim(
"C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Para_Caracterizar_2023_II.csv",
delim = ";",
show_col_types = FALSE,
locale = readr::locale(encoding = "windows-1252"),
progress = FALSE)
readr::read_delim(
"C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Para_Caracterizar_2023_II.csv",
delim = ";",
show_col_types = FALSE,
locale = readr::locale(encoding = "windows-1252"),
progress = FALSE) |>
dplyr::select(
"codigoupa" = "Codigo_UPA",
"departamento" = "Departamento",
"municipio" = "Municipio",
"latitud" = "Latitud",
"longitud" = "Longitud")
UPA_Asignadas_SF <- readr::read_delim(
"C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Para_Caracterizar_2023_II.csv",
delim = ";",
show_col_types = FALSE,
locale = readr::locale(encoding = "windows-1252"),
progress = FALSE) |>
dplyr::select(
"codigoupa" = "Codigo_UPA",
"departamento" = "Departamento",
"municipio" = "Municipio",
"latitud" = "Latitud",
"longitud" = "Longitud") |>
sf::st_as_sf(coords = c("longitud", "latitud"), crs = 4326)
Obs_Altitudes_UPA <- Obs_Altitudes_UPA(Datos_Elevacion)
Obs_Altitudes_UPA
Obs_Distancia_Con_UPA_Digitadas <- Obs_Distancia_Con_UPA_Digitadas(Datos_Evaluar_SF, Datos_GC_SF)
Obs_Coordenadas_Preregistro_y_Asignadas <- Obs_Coordenadas_Preregistro_vs_Asignadas(Datos_Evaluar_SF, UPA_Asignadas_SF)
Obs_Coordenadas_Preregistro_y_Asignadas
Datos_Evaluar_SF |>
dplyr::nest_join(y = UPA_Asignadas_SF, by = c("departamento", "municipio"))
Join_Coordenadas_Preregistro_y_Asignadas <-
Datos_Evaluar_SF |>
dplyr::nest_join(y = UPA_Asignadas_SF, by = c("departamento", "municipio"))
View(Join_Coordenadas_Preregistro_y_Asignadas)
Join_Coordenadas_Preregistro_y_Asignadas <-
Datos_Evaluar_SF |>
dplyr::nest_join(y = UPA_Asignadas_SF, by = c("departamento", "municipio")) |>
tidyr::unnest(cols = c("UPA_Asignadas_SF"), names_sep = ".")
Datos_Evaluar_SF
View(Datos_Evaluar_SF)
View(UPA_Asignadas_SF)
UPA.Asignadas.SF <- readr::read_delim(
"C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Para_Caracterizar_2023_II.csv",
delim = ";",
show_col_types = FALSE),
UPA.Asignadas.SF <- readr::read_delim(
"C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Para_Caracterizar_2023_II.csv",
delim = ";",
show_col_types = FALSE,
progress = FALSE) |>
dplyr::select(
"codigoupa" = "Codigo_UPA",
"departamento" = "Departamento",
"municipio" = "Municipio",
"latitud" = "Latitud",
"longitud" = "Longitud") |>
sf::st_as_sf(coords = c("longitud", "latitud"), crs = 4326)
UPA.Asignadas.SF <- readr::read_delim(
"C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Para_Caracterizar_2023_II.csv",
delim = ";",
show_col_types = FALSE,
progress = FALSE) |>
dplyr::select(
"codigoupa" = "Codigo_UPA",
"departamento" = "Departamento",
"municipio" = "Municipio",
"latitud" = "Latitud",
"longitud" = "Longitud") |>
sf::st_as_sf(coords = c("longitud", "latitud"), crs = 4326)
View(UPA.Asignadas.SF)
Join_Coordenadas_Preregistro_y_Asignadas <-
Datos_Evaluar_SF |>
dplyr::nest_join(y = UPA.Asignadas.SF, by = c("departamento", "municipio")) |>
tidyr::unnest(cols = c("UPA_Asignadas_SF"), names_sep = ".")
Join_Coordenadas_Preregistro_y_Asignadas <-
Datos_Evaluar_SF |>
dplyr::nest_join(y = UPA.Asignadas.SF, by = c("departamento", "municipio")) |>
tidyr::unnest(cols = c("UPA.Asignadas.SF"), names_sep = ".")
View(Join_Coordenadas_Preregistro_y_Asignadas)
Obs.Altitudes.UPA <- Obs_Altitudes_UPA(Datos.Elevacion)
# Intervalos de registros para revisar.
Registros.Evaluar <- c(20012L, 20040L)
Datos_Evaluar_SF <- function(Datos_Evaluar) {
Datos_Evaluar_SF <-
Datos_Evaluar |>
dplyr::arrange(.data$departamento, .data$municipio, .data$registro) |>
sf::st_as_sf(coords = c("longituddecimal", "latituddecimal"), crs = 4326)
invisible(Datos_Evaluar_SF)
}
Datos_Evaluar_SF <- function(Datos_Evaluar) {
Datos_Evaluar_SF <-
Datos_Evaluar |>
dplyr::arrange(.data$departamento, .data$municipio, .data$registro) |>
sf::st_as_sf(coords = c("longituddecimal", "latituddecimal"), crs = 4326)
invisible(Datos_Evaluar_SF)
}
# Intervalos de registros para revisar.
Registros.Evaluar <- c(20012L, 20040L)
## Importar todos los datos del informe de pre-registro.
Datos.Preregistro <- D_G_Preregistro("http://sepec.aunap.gov.co/Acuicultura/InformePreregistroCaracterizacionAcuiculturaCSV2.csv")
## Filtrar los pre-registros de la vigencia actual.
Datos.Preregistro.Vigencia.Actual <- Datos.Preregistro |> dplyr::filter(fechadigitacion > "2023-10-01")
## Filtrar los pre-registros para evaluar.
Datos.Evaluar <- Datos.Preregistro.Vigencia.Actual |>
dplyr::filter(dplyr::between(registro, Registros.Evaluar[1], Registros.Evaluar[2]))
## Filtrar los pre-registros anteriormente evaluados.
Preregistros.Antiguos <- Datos.Preregistro |>
dplyr::filter(colector != "pnud", registro < Registros.Evaluar[1]) |>
dplyr::select(c("registro", "latitud", "longitud"))
Datos.Evaluar.SF <- Datos_Evaluar_SF(Datos_Evaluar)
Datos.Evaluar.SF <- Datos_Evaluar_SF(Datos.Evaluar)
Dptos.Evaluar <- unique(Datos.Preregistro.Vigencia.Actual[['departamento']])
Mpios.Evaluar <- unique(Datos.Preregistro.Vigencia.Actual[['municipio']])
Lista.Nombres.Validos <- utils::read.csv("C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Nom_UPA.csv")
Lista.Nombres.Auxiliar <- c("la upa no existe", "upa inexistente", "no informa", "no aplica")
Datos.GC.SF <- D_G_Caracterizacion_SF(
"http://sepec.aunap.gov.co/Acuicultura/CaracterizacionGranjaAcuiculturaCSV2.csv",
Dptos.Evaluar,
Mpios.Evaluar)
Obs.Nombre.UPA <- Obs_Nombre_UPA(Datos.Evaluar, Lista.Nombres.Validos, Lista.Nombres.Auxiliar)
Obs.Nombre.UPA.Inexistente <- Obs_Nombre_UPA_Inexistente(Datos.Evaluar, Lista.Nombres.Auxiliar)
Obs.Nombre.Predio <- Obs_Nombre_Predio(Datos.Evaluar, Lista.Nombres.Auxiliar)
Obs.Codigo.Misma.UPA <- Obs_Codigo_Misma_UPA(Datos.Evaluar, Datos.Preregistro)
Obs.Posibles.UPA.Repetidas <- Obs_Posibles_UPA_Repetidas(Datos.Evaluar, Lista.Nombres.Auxiliar)
Obs.UPA.Repetidas <- Obs_UPA_Repetidas(Datos.Evaluar, Lista.Nombres.Auxiliar)
Obs.Coordenadas.Repetidas <- Obs_Coordenadas_Repetidas(Datos.Evaluar)
Obs.Coordenadas.En.Pregistros.Antiguos <- Obs_Coordenadas_En_Pregistros_Antiguos(Datos.Evaluar, Preregistros.Antiguos)
Datos.Elevacion <- Datos_Elevacion(Datos.Evaluar.SF)
UPA.Asignadas.SF <- readr::read_delim(
"C:/Users/romu5/OneDrive/Documentos/R/Revision_Preregistro/Para_Caracterizar_2023_II.csv",
delim = ";",
show_col_types = FALSE,
progress = FALSE) |>
dplyr::select(
"codigoupa" = "Codigo_UPA",
"departamento" = "Departamento",
"municipio" = "Municipio",
"latitud" = "Latitud",
"longitud" = "Longitud") |>
sf::st_as_sf(coords = c("longitud", "latitud"), crs = 4326)
Obs.Altitudes.UPA <- Obs_Altitudes_UPA(Datos.Elevacion)
Obs.Distancia.Con.UPA.Digitadas <- Obs_Distancia_Con_UPA_Digitadas(Datos.Evaluar.SF, Datos.GC.SF)
Obs.Coordenadas.Preregistro.y.Asignadas <- Obs_Coordenadas_Preregistro_vs_Asignadas(Datos.Evaluar.SF, UPA.Asignadas.SF)
Obs.Coordenadas.Preregistro.y.Asignadas
View(Obs.Coordenadas.Preregistro.y.Asignadas)
Mpio.shp <- sf::st_read("c:/Users/romu5/Downloads/Programas y Material de estudio - QGIS/MGN2021_MPIO_POLITICO/MGN_MPIO_POLITICO.shp") |>
dplyr::select(c("DPTO_CNMBR", "MPIO_CNMBR", "geometry")) |>
sf::st_transform(crs = 4326)
st_write
remove.packages("ObsPreregistro")
devtools::document()
rm(list = c("Datos_Evaluar_SF"))
devtools::document()
